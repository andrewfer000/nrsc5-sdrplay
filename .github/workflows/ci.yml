name: CI

#on: [push, pull_request]
on:
  workflow_dispatch:
    inputs:
      sdr_driver:
        description: 'SDR driver (rtlsdr, sdrplay, soapy)'
        required: true
        default: 'sdrplay'
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*'
    inputs:
      sdr_driver:
        description: 'SDR driver (rtlsdr, sdrplay, soapy)'
        required: true
        default: 'sdrplay'

env:
  SDRPLAY_SOFTWARE_DOWNLOADS: 'https://www.sdrplay.com/software'

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: echo ${{ github.event.inputs.sdr_driver }}

  ubuntu-build-rtlsdr:
    name: Ubuntu CI RTL-SDR
    if: github.event.inputs.sdr_driver == 'rtlsdr'
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install dependencies
        run: sudo apt-get update -qq && sudo apt-get install -y libao-dev libfftw3-dev librtlsdr-dev python3-pyaudio
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ..
      - name: Compile
        working-directory: build
        run: make -j3
      - name: Install
        working-directory: build
        run: |
          sudo make install
          sudo ldconfig
      - name: Test
        run: |
          xz -d < support/sample.xz > sample
          nrsc5 -r sample -o sample.wav 0 2> sample.log
          cat sample.log
          grep -q "You're Listening to Q" sample.log
          cat sample | nrsc5 -r - -o sample.wav 0 2> sample.log
          grep -q "You're Listening to Q" sample.log
          support/cli.py -r sample 0
          cat sample | support/cli.py -r - 0
      - name: Windows cross-compile
        run: |
          sudo apt-get install -y mingw-w64
          support/win-cross-compile 32 rtlsdr
          support/win-cross-compile 64 rtlsdr
  macos-build-rtlsdr:
    name: MacOS CI RTL-SDR
    if: github.event.inputs.sdr_driver == 'rtlsdr'
    runs-on: macos-10.15
    steps:
      - name: Install dependencies
        run: |
          brew install autoconf automake libao fftw librtlsdr portaudio
          pip3 install pyaudio
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ..
      - name: Compile
        working-directory: build
        run: make -j3
      - name: Install
        working-directory: build
        run: make install
      - name: Test
        run: |
          xz -d < support/sample.xz > sample
          nrsc5 -r sample -o sample.wav 0 2> sample.log
          cat sample.log
          grep -q "You're Listening to Q" sample.log
          cat sample | nrsc5 -r - -o sample.wav 0 2> sample.log
          grep -q "You're Listening to Q" sample.log
          support/cli.py -r sample 0
          cat sample | support/cli.py -r - 0
      - name: Windows cross-compile
        run: |
          brew cask install xquartz wine-stable
          brew install mingw-w64
          support/win-cross-compile 32 rtlsdr
          support/win-cross-compile 64 rtlsdr

  ubuntu-build-sdrplay:
    name: Ubuntu CI SDRplay API 3.X
    if: github.event.inputs.sdr_driver == 'sdrplay'
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update -qq && sudo apt-get install -y libao-dev libfftw3-dev python3-pyaudio
      - name: Install SDRplay API 3.X
        env:
          SDRPLAY_API_FILE_LINUX: SDRplay_RSP_API-Linux-3.07.1.run
        run: |
          curl -s -S -O "$SDRPLAY_SOFTWARE_DOWNLOADS/$SDRPLAY_API_FILE_LINUX"
          sudo sh -c "{ echo; echo y; echo n; } | MORE=-V sh \"$SDRPLAY_API_FILE_LINUX\""
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DSDR_DRIVER="sdrplay" ..
      - name: Compile
        working-directory: build
        run: make -j3
      - name: Install
        working-directory: build
        run: |
          sudo make install
          sudo ldconfig
      - name: Windows cross-compile
        env:
          SDRPLAY_API_FILE_WINDOWS: SDRplay_RSP_API-Windows-3.07.2.exe
          SDRPLAY_API_BASE_DIR: ${{ runner.workspace }}/SDRplay
        run: |
          sudo apt-get install -y mingw-w64 innoextract
          curl -s -S -O "$SDRPLAY_SOFTWARE_DOWNLOADS/$SDRPLAY_API_FILE_WINDOWS"
          innoextract "$SDRPLAY_API_FILE_WINDOWS" -I app/API -d "$SDRPLAY_API_BASE_DIR"
          support/win-cross-compile 32 sdrplay
          support/win-cross-compile 64 sdrplay
          cp build-win32/bin/nrsc5.exe nrsc5-windows-32.exe
          cp build-win64/bin/nrsc5.exe nrsc5-windows-64.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            nrsc5-windows-32.exe
            nrsc5-windows-64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macos-build-sdrplay:
    name: MacOS CI SDRplay API 3.X
    if: github.event.inputs.sdr_driver == 'sdrplay'
    runs-on: macos-10.15
    steps:
      - name: Install dependencies
        run: |
          brew install autoconf automake libao fftw portaudio
          pip3 install pyaudio
      - name: Install SDRplay API 3.X
        env:
          SDRPLAY_API_FILE_MACOS: SDRplay_RSP_API-MacOSX-3.07.3.pkg
        run: |
          curl -s -S -O "$SDRPLAY_SOFTWARE_DOWNLOADS/$SDRPLAY_API_FILE_MACOS"
          sudo installer -pkg "$SDRPLAY_API_FILE_MACOS" -target /
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake -DSDR_DRIVER="sdrplay" ..
      - name: Compile
        working-directory: build
        run: |
          make -j3
          cp src/nrsc5 ../nrsc5-macos
      #- name: Install
      #  working-directory: build
      #  run: make install
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: nrsc5-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Windows cross-compile
      #  run: |
      #    brew cask install xquartz wine-stable
      #    brew install mingw-w64
      #    support/win-cross-compile 32 sdrplay
      #    support/win-cross-compile 64 sdrplay
